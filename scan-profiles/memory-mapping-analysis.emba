# EMBA - EMBEDDED LINUX ANALYZER
#
# Copyright 2020-2025 Siemens Energy AG
#
# EMBA comes with ABSOLUTELY NO WARRANTY. This is free software, and you are
# welcome to redistribute it under the terms of the GNU General Public License.
# See LICENSE file for usage of this software.
#
# EMBA is licensed under GPLv3
#
# Author(s): Claude Code Assistant
#
# Description: Memory mapping analysis profile optimized for Runtime Address (RA) extraction
#              and firmware version comparison. Enables emulation modules and memory analysis.

export FORMAT_LOG=1
export THREADED=1
export SHORT_PATH=1
export HTML=1
export QEMULATION=1
export FULL_EMULATION=1
export BINARY_EXTENDED=1

# Force specific modules for memory mapping analysis
export MODULES_TO_FORCE=("S05" "S09" "S10" "S115" "S120" "L10" "F50")

# Enable silent mode and status bar
export DISABLE_STATUS_BAR=0
export SILENT=1

# we output the profile only at the beginning - outside the docker environment
if [[ $IN_DOCKER -ne 1 ]] ; then
  print_output "$(indent "$(orange "Memory Mapping Analysis Profile")")" "no_log"
  print_output "$(indent "$(orange "Adds ANSI color codes to log")")" "no_log"
  print_output "$(indent "$(orange "Activate multi threading")")" "no_log"
  print_output "$(indent "$(orange "Prints only relative paths")")" "no_log"
  print_output "$(indent "$(orange "Activates web report creation in log path")")" "no_log"
  print_output "$(indent "$(orange "Activates qemu user-mode emulation")")" "no_log"
  print_output "$(indent "$(orange "Activates full-system emulation")")" "no_log"
  print_output "$(indent "$(orange "Enables extended binary analysis")")" "no_log"
  print_output "$(indent "$(orange "Enables Runtime Address (RA) extraction")")" "no_log"
  if [[ "$USE_DOCKER" -ne 1 ]]; then
    print_output "$(indent "$(orange "Enables automated qemu emulation tests (WARNING this module could harm your host!)")")" "no_log"
  else
    print_output "$(indent "$(orange "Enables automated qemu emulation tests")")" "no_log"
  fi
  print_output "$(indent "$(orange "Runs EMBA in docker container")")" "no_log"
  for MODULE_ in "${MODULES_TO_FORCE[@]}"; do
    print_output "$(indent "$(orange "Forced module: $MODULE_")")" "no_log"
  done
  export USE_DOCKER=1
fi